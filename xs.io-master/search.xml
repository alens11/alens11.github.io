<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>谈谈你对闭包的了解</title>
      <link href="/article/571122181dbb.html"/>
      <url>/article/571122181dbb.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是闭包"><a href="#什么是闭包" class="headerlink" title="什么是闭包"></a>什么是闭包</h2><p>首先来看一下MDN对闭包的定义：</p><div class="note no-icon flat"><p><strong>闭包</strong>（closure）是一个函数以及其捆绑的周边环境状态（<strong>Iexical environment，词法环境</strong>）的引用的组合。换而言之，<strong>闭包让开发者可以从内部函数访问外部函数的作用域</strong>。在 JavaScript 中，闭包会随着函数的创建而被同时创建</p></div><h2 id="词法作用域"><a href="#词法作用域" class="headerlink" title="词法作用域"></a>词法作用域</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;Mozilla&quot;</span>; <span class="comment">// name 是一个被 init 创建的局部变量</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">displayName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// displayName() 是内部函数，一个闭包</span></span><br><span class="line">    <span class="title function_">alert</span>(name); <span class="comment">// 使用了父函数中声明的变量</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">displayName</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">init</span>();</span><br></pre></td></tr></table></figure><p><code>init()</code> 创建了一个局部变量 <code>name</code> 和一个名为 <code>displayName()</code> 的函数。<code>displayName()</code> 是定义在 <code>init()</code> 里的内部函数，并且仅在 <code>init()</code> 函数体内可用。请注意，<code>displayName()</code> 没有自己的局部变量。然而，因为它可以访问到外部函数的变量，所以 <code>displayName()</code> 可以使用父函数 <code>init()</code> 中声明的变量 <code>name</code>。</p><p>运行该代码后，<code>displayName()</code> 函数内的 <code>alert()</code> 语句成功显示出了变量 <code>name</code> 的值（该变量在其父函数中声明）。这个词法作用域的例子描述了分析器如何在函数嵌套的情况下解析变量名。词法（lexical）一词指的是，词法作用域根据源代码中声明变量的位置来确定该变量在何处可用。嵌套函数可访问声明于它们外部作用域的变量。</p><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeFunc</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;Mozilla&quot;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">displayName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> displayName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myFunc = <span class="title function_">makeFunc</span>();</span><br><span class="line"><span class="title function_">myFunc</span>();</span><br></pre></td></tr></table></figure><p>运行这段代码跟上述词法作用域示例代码效果完全一样。其中不同的的地方在于内部函数 <code>displayName()</code> 在执行前，从外部函数返回。</p><p>在一些编程语言中，一个函数中的局部变量仅存在于此函数的执行期间。一旦 <code>makeFunc()</code> 执行完毕，你可能会认为 <code>name</code> 变量将不能再被访问。然而，因为代码仍按预期运行，所以在 JavaScript 中情况显然与此不同。</p><p>原因在于，JavaScript 中的函数会形成了闭包。 闭包是由函数以及声明该函数的词法环境组合而成的。该环境包含了这个闭包创建时作用域内的任何局部变量。在本例子中，<code>myFunc</code> 是执行 <code>makeFunc</code> 时创建的 <code>displayName</code> 函数实例的引用。<code>displayName</code> 的实例维持了一个对它的词法环境（变量 name 存在于其中）的引用。因此，当 <code>myFunc</code> 被调用时，变量 <code>name</code> 仍然可用，其值 <code>Mozilla</code> 就被传递到 <code>alert</code> 中。</p><p>下面是一个更有意思的示例 — 一个 <code>makeAdder</code> 函数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeAdder</span>(<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">y</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> add5 = <span class="title function_">makeAdder</span>(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">var</span> add10 = <span class="title function_">makeAdder</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add5</span>(<span class="number">2</span>)); <span class="comment">// 7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add10</span>(<span class="number">2</span>)); <span class="comment">// 12</span></span><br></pre></td></tr></table></figure><p>在这个示例中，我们定义了 <code>makeAdder(x)</code> 函数，它接受一个参数 <code>x</code> ，并返回一个新的函数。返回的函数接受一个参数 <code>y</code>，并返回<code>x+y</code> 的值。</p><p>从本质上讲，<code>makeAdder</code> 是一个函数工厂 — 他创建了将指定的值和它的参数相加求和的函数。在上面的示例中，我们使用函数工厂创建了两个新函数 — 一个将其参数和 5 求和，另一个和 10 求和。</p><p><code>add5</code> 和 <code>add10</code> 都是闭包。它们共享相同的函数定义，但是保存了不同的词法环境。在 <code>add5</code> 的环境中，<code>x</code> 为 5。而在 <code>add10</code> 中，<code>x</code> 则为 10。</p><h2 id="实用的闭包"><a href="#实用的闭包" class="headerlink" title="实用的闭包"></a>实用的闭包</h2><p>闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来。这显然类似于面向对象编程。在面向对象编程中，对象允许我们将某些数据（对象的属性）与一个或者多个方法相关联。</p><p>因此，通常你使用只有一个方法的对象的地方，都可以使用闭包。</p><p>在 Web 中，你想要这样做的情况特别常见。大部分我们所写的 JavaScript 代码都是基于事件的 — 定义某种行为，然后将其添加到用户触发的事件之上（比如点击或者按键）。我们的代码通常作为回调：为响应事件而执行的函数。</p><p>假如，我们想在页面上添加一些可以调整字号的按钮。一种方法是以像素为单位指定 <code>body</code> 元素的 <code>font-size</code>，然后通过相对的 <code>em</code> 单位设置页面中其他元素（例如<code>header</code>）的字号：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, Arial, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们的文本尺寸调整按钮可以修改 <code>body</code> 元素的 <code>font-size</code> 属性，由于我们使用相对单位，页面中的其他元素也会相应地调整。</p><p>以下是 JavaScript：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeSizer</span>(<span class="params">size</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">fontSize</span> = size + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> size12 = <span class="title function_">makeSizer</span>(<span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> size14 = <span class="title function_">makeSizer</span>(<span class="number">14</span>);</span><br><span class="line"><span class="keyword">var</span> size16 = <span class="title function_">makeSizer</span>(<span class="number">16</span>);</span><br></pre></td></tr></table></figure><p><code>size12</code>，<code>size14</code> 和 <code>size16</code> 三个函数将分别把 <code>body</code> 文本调整为 12，14，16 像素。我们可以将它们分别添加到按钮的点击事件上。如下所示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;size-12&quot;</span>).<span class="property">onclick</span> = size12;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;size-14&quot;</span>).<span class="property">onclick</span> = size14;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;size-16&quot;</span>).<span class="property">onclick</span> = size16;</span><br></pre></td></tr></table></figure><h2 id="用闭包模拟私有方法"><a href="#用闭包模拟私有方法" class="headerlink" title="用闭包模拟私有方法"></a>用闭包模拟私有方法</h2><p>编程语言中，比如 Java，是支持将方法声明为私有的，即它们只能被同一个类中的其他方法所调用。</p><p>而 JavaScript 没有这种原生支持，但我们可以使用闭包来模拟私有方法。私有方法不仅仅有利于限制对代码的访问：还提供了管理全局命名空间的强大能力，避免非核心的方法弄乱了代码的公共接口部分。</p><p>下面的示例展现了如何使用闭包来定义公共函数，并令其可以访问私有函数和变量。这个方式也称为模块模式（module pattern）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Counter</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> privateCounter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">changeBy</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    privateCounter += val;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">increment</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">changeBy</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">decrement</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">changeBy</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">value</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> privateCounter;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 0 */</span></span><br><span class="line"><span class="title class_">Counter</span>.<span class="title function_">increment</span>();</span><br><span class="line"><span class="title class_">Counter</span>.<span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 2 */</span></span><br><span class="line"><span class="title class_">Counter</span>.<span class="title function_">decrement</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 1 */</span></span><br></pre></td></tr></table></figure><p>在之前的示例中，每个闭包都有它自己的词法环境；而这次我们只创建了一个词法环境，为三个函数所共享：<code>Counter.increment</code>，<code>Counter.decrement</code> 和 <code>Counter.value</code>。</p><p>该共享环境创建于一个立即执行的匿名函数体内。这个环境中包含两个私有项：名为 <code>privateCounter</code> 的变量和名为 <code>changeBy</code> 的函数。这两项都无法在这个匿名函数外部直接访问。必须通过匿名函数返回的三个公共函数访问。</p><p>这三个公共函数是共享同一个环境的闭包。多亏 JavaScript 的词法作用域，它们都可以访问 <code>privateCounter</code> 变量和 <code>changeBy</code> 函数。</p><div class="note info flat"><p><strong>备注</strong>： 你应该注意到我们定义了一个匿名函数，用于创建一个计数器。我们立即执行了这个匿名函数，并将他的值赋给了变量<code>Counter</code>。我们可以把这个函数储存在另外一个变量<code>makeCounter</code>中，并用他来创建多个计数器。</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> makeCounter = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> privateCounter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">changeBy</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    privateCounter += val;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">increment</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">changeBy</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">decrement</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">changeBy</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">value</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> privateCounter;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Counter1</span> = <span class="title function_">makeCounter</span>();</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Counter2</span> = <span class="title function_">makeCounter</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter1</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 0 */</span></span><br><span class="line"><span class="title class_">Counter1</span>.<span class="title function_">increment</span>();</span><br><span class="line"><span class="title class_">Counter1</span>.<span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter1</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 2 */</span></span><br><span class="line"><span class="title class_">Counter1</span>.<span class="title function_">decrement</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter1</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 1 */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter2</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 0 */</span></span><br></pre></td></tr></table></figure><p>请注意两个计数器 <code>Counter1</code> 和 <code>Counter2</code> 是如何维护它们各自的独立性的。每个闭包都是引用自己词法作用域内的变量 <code>privateCounter</code> 。</p><p>每次调用其中一个计数器时，通过改变这个变量的值，会改变这个闭包的词法环境。然而在一个闭包内对变量的修改，不会影响到另外一个闭包中的变量。</p><div class="note info flat"><p><strong>备注</strong>： 以这种方式使用闭包，提供了许多与面向对象编程相关的好处 —— 特别是数据隐藏和封装。</p></div><h2 id="性能考量"><a href="#性能考量" class="headerlink" title="性能考量"></a>性能考量</h2><p>如果不是某些特定任务需要使用闭包，在其他函数中创建函数是不明智的，因为闭包在处理速度和内存消耗方面对脚本性能具有负面影响。</p><p>例如，在创建新的对象或者类时，方法通常应该关联于对象的原型，而不是定义到对象的构造器中。原因是这将导致每次构造器被调用时，方法都会被重新赋值一次（也就是说，对于每个对象的创建，方法都会被重新赋值）。</p><p>考虑以下示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">MyObject</span>(<span class="params">name, message</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">message</span> = message.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">getName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">getMessage</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">message</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的代码中，我们并没有利用到闭包的好处，因此可以避免使用闭包。修改成如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">MyObject</span>(<span class="params">name, message</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">message</span> = message.<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">MyObject</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">  <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">getMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">message</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但我们不建议重新定义原型。可改成如下例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">MyObject</span>(<span class="params">name, message</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">message</span> = message.<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">MyObject</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">MyObject</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getMessage</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">message</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在前面的两个示例中，继承的原型可以为所有对象共享，不必在每一次创建对象时定义方法。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>每日一问-post请求可以携带params参数吗？</title>
      <link href="/article/da0a065ed6eb.html"/>
      <url>/article/da0a065ed6eb.html</url>
      
        <content type="html"><![CDATA[<p>post请求可以携带params参数吗?</p><div class="hide-block"><button type="button" class="hide-button" style="background-color:  #FFCC80;color:  #fff">查看答案    </button><div class="hide-content"><p style="font-size: 18px; font-weight: 600; color: #E53935">可以</p><p>我们使用 <code>node.js</code>+<code>express</code> 写一个简单的接口服务如下：<br>将服务挂载到了本地3000端口，定义了一个post请求接口，请求路径为 <code>/test</code>，该接口会将调用者传递的<code>params</code>和<code>body</code>参数返回</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>: <span class="literal">false</span>&#125;))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/test&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(&#123;</span><br><span class="line">    <span class="attr">query</span>: req.<span class="property">query</span>,</span><br><span class="line">    <span class="attr">body</span>: req.<span class="property">body</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务已启动&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>接下来我们使用 <a href="https://apifox.com/">Apifox</a> 对该接口进行测试<br><img src="/img/dailyquestion/image.png"><br><img src="/img/dailyquestion/image-1.png"><br><img src="/img/dailyquestion/image-2.png"><br>可以看到，在post请求前提下，不管是params还是body参数，该接口都可以获取到并将之返回。</p></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 每日一问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo+butterfly_Github pages搭建个人博客网站</title>
      <link href="/article/b9313b7126a9.html"/>
      <url>/article/b9313b7126a9.html</url>
      
        <content type="html"><![CDATA[<!-- # Hexo+butterfly_Github page 搭建个人博客网站 --><blockquote><p>敬请期待<br>本教程使用 Hexo框架+butterfly主题+Github page部署 进行网站搭建</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>1、访问<a href="github.com">Github</a>进行账号注册<br>2、注册之后创建一个仓库</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p><strong>安装前提：</strong></p><ul><li><a href="https://nodejs.org/en">Node.js</a>(Node.js版本需不低于10.13，建议使用Node.js12.0及以上版本)<br>下载较慢可以访问<a href="https://nodejs.cn/">Node.js中文网</a></li><li><a href="https://git-scm.com/">Git</a></li></ul><p><strong>安装Git</strong></p><ul><li>Windows: 下载并安装<a href="https://git-scm.com/download/win">git</a></li><li>Mac: 使用 <a href="https://mxcl.github.com/homebrew/">Homebrew</a>，<a href="https://www.macports.org/">MacPorts</a></li><li>Linux(Ubuntu，Debian): <code>sudo apt-get install git-core</code></li><li>Linux(Fedora，Red Hat，CentOS): <code>sudo yum install git-core</code></li></ul><blockquote><p><strong>Mac用户</strong><br>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，完成后启动并进入 <strong>Preferences-&gt;Download-&gt;Command Line Tools-&gt;install</strong> 安装命令行工具</p></blockquote><blockquote><p><strong>Windows用户</strong><br>对于中国大陆地区的用户，可以前往<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包</p></blockquote><p><strong>安装Node.js</strong><br>Node.js 为大多数平台提供了官方的安装程序，对于中国大陆地区的用户，可以前往<a href="https://registry.npmmirror.com/binary.html?path=node/">淘宝 Node.js 镜像</a> 下载</p><p>其他安装方法：</p><ul><li>Windows: 通过 <a href="https://github.com/jasongin/nvs/">nvs</a>或者 <a href="https://github.com/nvm-sh/nvm">nvm</a> 安装</li><li>Mac: 使用 <a href="https://mxcl.github.com/homebrew/">Homebrew</a>，<a href="https://www.macports.org/">MacPorts</a></li><li>Linux:(DEB&#x2F;RPM-based): 从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装</li><li>其他: 使用响应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/zh-cn/download/package-manager">指导</a></li></ul><p>对于Mac和Linux同样建议使用 nvs 和 nvm，以避免可能会出现的权限问题</p><p><strong>安装Hexo</strong><br>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="初始化博客项目"><a href="#初始化博客项目" class="headerlink" title="初始化博客项目"></a>初始化博客项目</h2><p>新建一个文件夹，在该文件夹根目录打开cmd，使用 hexo-cli 初始化博客项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>继续安装 <a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a> 主题</p><div class="tabs" id="butterfly-install"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#butterfly-install-1">npm安装</button></li><li class="tab"><button type="button" data-href="#butterfly-install-2">Git安装(github)</button></li><li class="tab"><button type="button" data-href="#butterfly-install-3">Git安装(gitee)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="butterfly-install-1"><blockquote><p>此方法只支持 Hexo 5.0.0 以上版本<br><strong>通过npm安装并不会在themes文件夹下生成主题文件夹，而是在node_modules下生成</strong></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-theme-butterfly --save</span><br></pre></td></tr></table></figure><div class="note info modern"><p>升级方法：在博客项目目录下，运行 <code>npm update hexo-theme-butterfly</code></p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="butterfly-install-2"><p><strong>稳定版</strong><br>在博客项目根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p><strong>测试版</strong></p><blockquote><p>测试版可能存在bug，追求稳定的请安装稳定版</p></blockquote><p>如果想要安装比较新的dev分支，可以</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><div class="note info modern"><p>升级方法：在主题目录下，进行 <code>git pull</code></p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="butterfly-install-3"><p><strong>稳定版</strong><br>在博客项目根目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p><strong>测试版</strong></p><blockquote><p>测试版可能存在bug，追求稳定的请安装稳定版</p></blockquote><p>如果想要安装比较新的dev分支，可以</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><div class="note info modern"><p>升级方法：在主题目录下，进行 <code>git pull</code></p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>修改 博客项目根目录下的 <code>_config.yml(后面讲称作站点配置文件)</code>，把主题改为 <code>butterfly</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><div class="note info modern"><p>如果你是使用npm安装的butterfly主题，建议将node_modules&gt;hexo-theme-butterfly&gt;<code>_config.yml</code>复制到博客项目根目录并重命名为<code>_config.butterfly.yml(后面将称作主题配置文件)</code>,修改 <code>_config.butterfly.yml</code> 配置文件会同步到主题文件夹中的配置文件，这样可以避免后续因升级主题带来的配置数据丢失</p></div><p>如果你没有pug以及stylus的渲染器，请下载安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p><strong>升级建议</strong></p><div class="note info modern"><p>升级完成后，请到Github的<a href="https://github.com/jerryc127/hexo-theme-butterfly/releases">Releases</a><br>里面有标注文件的内容（如有），请根据实际情况更新你的配置内容</p></div><p>接着一键三连</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就可以在浏览器中访问<a href="http://localhost:4000">http://localhost:4000</a>浏览刚搭建的博客网站</p><h2 id="网站基本信息"><a href="#网站基本信息" class="headerlink" title="网站基本信息"></a>网站基本信息</h2><div class="tabs" id="butterfly-install"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#butterfly-install-1">网站基本信息</button></li><li class="tab"><button type="button" data-href="#butterfly-install-2">参数解释</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="butterfly-install-1"><p>在 <code>_config.yml</code> 中设置网站基本信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">冉蓝の博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;记录学习|分享生活&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;我尝试初始化你，但你像是一个const变量，一经赋值就无法再次改变&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">博客</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Rlan</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>在 <code>_config.butterfly.yml</code> 中设置页脚信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Footer Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2023</span></span><br><span class="line">  <span class="attr">custom_text:</span> <span class="string">Hi,</span>  <span class="string">welcome</span>  <span class="string">to</span>  <span class="string">my</span>  <span class="string">&lt;a</span> <span class="string">href=&quot;https://butterfly.js.org/&quot;&gt;</span>  <span class="string">blog&lt;/a&gt;!</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">true</span> <span class="comment"># Copyright of theme and framework</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="butterfly-install-2"><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><div style="width:20px"></div></td><td align="center"><div style="width:240px"></div></td></tr><tr><td align="center"><code>title</code></td><td align="center">网站标题</td></tr><tr><td align="center"><code>subtitle</code></td><td align="center">网站副标题</td></tr><tr><td align="center"><code>description</code></td><td align="center">网站描述</td></tr><tr><td align="center"><code>keywords</code></td><td align="center">网站关键词，支持多个</td></tr><tr><td align="center"><code>author</code></td><td align="center">网站作者</td></tr><tr><td align="center"><code>language</code></td><td align="center">网站使用的语言</td></tr><tr><td align="center"><code>timezone</code></td><td align="center">网站时区，默认使用您电脑的时区</td></tr></tbody></table><p>其中 <code>description</code> 主要用于SEO，告诉搜索引擎一个关于网站的简单描述，通常建议在其中包含网站的关键词。</p><p>页脚参数</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><div style="width:20px"></div></td><td align="center"><div style="width:240px"></div></td></tr><tr><td align="center"><code>since</code></td><td align="center">网站建立年份</td></tr><tr><td align="center"><code>suctom_text</code></td><td align="center">自定义文本</td></tr><tr><td align="center"><code>copyright</code></td><td align="center">true 展示 Hexo 和 butterfly 版权信息，false 不展示</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Customize typed.js (配置typed.js)</span></span><br><span class="line">  <span class="comment"># https://github.com/mattboldt/typed.js/#customization</span></span><br><span class="line">  <span class="attr">typed_option:</span></span><br><span class="line">    <span class="attr">startDelay:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">typeSpeed:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">backSpeed:</span> <span class="number">50</span></span><br><span class="line">  <span class="comment"># source 調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  調用一句網（簡體） https://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">记录学习</span> <span class="string">|</span> <span class="string">分享生活</span></span><br></pre></td></tr></table></figure><h2 id="顶部头像＆标题"><a href="#顶部头像＆标题" class="headerlink" title="顶部头像＆标题"></a>顶部头像＆标题</h2><p>在 <code>_config.butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">/img/nav_icon.png</span></span><br><span class="line">  <span class="attr">display_title:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">true</span> <span class="comment"># fixed navigation bar</span></span><br></pre></td></tr></table></figure><h2 id="顶部导航栏"><a href="#顶部导航栏" class="headerlink" title="顶部导航栏"></a>顶部导航栏</h2><div class="tabs" id="butterfly-install"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#butterfly-install-1">配置信息</button></li><li class="tab"><button type="button" data-href="#butterfly-install-2">参数解释</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="butterfly-install-1"><p>在 <code>_config.butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu 目錄</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tag</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">娱乐||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="string">电影:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">    <span class="string">相册:</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-images</span></span><br><span class="line">  <span class="string">分享||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="string">网站:</span> <span class="string">/website/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-globe</span></span><br><span class="line">  <span class="string">心愿单:</span> <span class="string">/wish/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-star</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="butterfly-install-2"><p>格式为：&#x2F;目录&#x2F; || 图标类名<br>因内置了 <a href="https://fontawesome.com/">fontawesome</a> 图标，可以在官网中找到对应图标类名并使用<br>如希望不展示图标可以不填图标类名</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h2><div class="note info flat"><p>如果不希望展示顶部图，可以在 <code>_config.butterfly.yml</code> 中配置: disable_top_img: true</p></div><div class="note primary flat"><p>顶部图的获取顺序，如果都没有配置，则不显示顶部图。<br>  1、页面顶部图的获取顺序：<br>    <code>各自配置的 top_img</code> &gt; <code>配置文件 default_top_img</code><br>  2、文章页面顶部图的获取顺序：<br>    <code>各自配置的 top_img</code> &gt; <code>cover</code> &gt; <code>配置文件的 default_top_img</code></p></div><p>配置中的值：</p><table><thead><tr><th>配置</th><th>解释</th></tr></thead><tbody><tr><td>index_img</td><td>主页的 top_img</td></tr><tr><td>default_top_img</td><td>默认的 top_img，当页面的top_img没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td>归档页面的 top_img</td></tr><tr><td>tag_img</td><td>tag 子页面的默认 top_img</td></tr><tr><td>tag_per_img</td><td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子页面默认的 top_img</td></tr><tr><td>category_per_img</td><td>category子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><p>其他页面的(tags&#x2F;categories&#x2F;自建页面) 和 文章页的，请到对应的 md 页面设置中的 <code>top_img front_matter top_img</code><br>以上所有的 top_img 可配置以下值：</p><blockquote><p>3.2.0以下版本的配置只支持</p><ul><li>留空，true 和 false-显示默认的颜色</li><li>img链接-显示所配置的图片</li></ul></blockquote><table><thead><tr><th>配置的值</th><th>效果</th></tr></thead><tbody><tr><td>留空</td><td>显示默认的 top_img (如有)，否则显示默认的颜色（文章页top_img留空的话，会显示 cover 的值）</td></tr><tr><td>img链接</td><td>图片的链接，显示所配置的图片</td></tr><tr><td>颜色（HEX值 - #0000FFRGB值 - rgb（0，0，255，135）颜色单词 - orange渐变色 - linear-gradient（ 2deg， #E0B10FF 9%， #44F3D100 &lt;&gt;%））</td><td>对应的颜色</td></tr><tr><td>transparent</td><td>透明</td></tr><tr><td>false</td><td>不显示 top_img</td></tr></tbody></table><p><code>tag_per_img</code> 和 是 3.2.0 新增的内容，可对 tag 和 category 进行单独的配置 <code>category_per_img</code><br>并不推荐为每个 tag 和每个 category 都配置不同的顶部图，因为配置太多会拖慢生成速度</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题美化合集</title>
      <link href="/article/8d109f6dac71.html"/>
      <url>/article/8d109f6dac71.html</url>
      
        <content type="html"><![CDATA[<h1 id="butterfly主题美化合集"><a href="#butterfly主题美化合集" class="headerlink" title="butterfly主题美化合集"></a>butterfly主题美化合集</h1><p>参考文章：<a href="https://blog.imzjw.cn/posts/b74f504f/index.html">小嘉的部落格</a></p><blockquote><p>敬请期待</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于主页动画处理</title>
      <link href="/article/a83dbdc129da.html"/>
      <url>/article/a83dbdc129da.html</url>
      
        <content type="html"><![CDATA[<p>相关链接：<a href="https://zlinni.github.io/posts/1513600459/">Animation主页动画处理</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-githubcalendar插件</title>
      <link href="/article/6c7cfbfba1d8.html"/>
      <url>/article/6c7cfbfba1d8.html</url>
      
        <content type="html"><![CDATA[<p>相关链接：<a href="https://zfe.space/post/hexo-githubcalendar.html">hexo-githubcalendar插件</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文章推荐置顶轮播</title>
      <link href="/article/ff698c419b99.html"/>
      <url>/article/ff698c419b99.html</url>
      
        <content type="html"><![CDATA[<p>相关链接：<a href="https://zfe.space/post/hexo-swiper.html">文章推荐置顶轮播</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于图床搭建方案</title>
      <link href="/article/1ea7968ace62.html"/>
      <url>/article/1ea7968ace62.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>敬请期待</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gtihub page + Hexo + butterfly 搭建个人博客网站</title>
      <link href="/article/0d800d45770d.html"/>
      <url>/article/0d800d45770d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>敬请期待</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于音乐界面</title>
      <link href="/article/b638517a5c5d.html"/>
      <url>/article/b638517a5c5d.html</url>
      
        <content type="html"><![CDATA[<p>相关推荐：</p><ul><li><a href="https://blog.anheyu.com/posts/c3d3.html">给你的博客加一个优雅的音乐界面</a> </li><li><a href="https://blog.anheyu.com/posts/6c69.html">butterfly魔改aplayer音乐</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加自定义JS/CSS文件</title>
      <link href="/article/4b1c822c5a89.html"/>
      <url>/article/4b1c822c5a89.html</url>
      
        <content type="html"><![CDATA[<p>参考链接：<a href="https://blog.leonus.cn/2022/custom.html">Hexo博客添加自定义css和js文件</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于如何使用Github搭建图床</title>
      <link href="/article/5e2acc2062ae.html"/>
      <url>/article/5e2acc2062ae.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c82317139883331fe8691775efee1703a40ff70ff5e2c4b62040e9f5f2069e45">4630436162ade97ba2718b7d0c4b3b6351ade09e539dfebeb5402828e29e64b05d85dfd6c4b5f2f84fe2151f41653cfe9044abd20339383454158ce33f9bf4011d3666b9789161958e0de774765b1dd618c595eb1f3c0800764f739f269ab6192fab81878e1095f8e4542fbbb8cb505e295e3c1e86554edda5c3c8aa1f4223e2c58bee1af6cecdcda019fb85ada8361d6f48fa49ec03f4cbf0b616b9904d28bf12bb7408cf3fdc8aed653c8fc88795560f293ea0578de15538e2e43f15a94a63219a747e096f019c257b7d1469c3622d9da4fa86c7514e80c3ecc2adf6781eed7171fcb630d13941bbbe604d0263d7abf3ff286049cb4f06c0f09603994b6cd5ad2fadbfa1928d5dd673575b0700bd944f592999a86200362107b3a8f8e10a90116423d0d1c9fa26d76ac43a5edd68d598743c0296ed9f1696428fb8b8790586ae7d9da87757af394a82fadc2be1560dd5e771979681055ec30228bbd324acdd4e4c9389e8527dbb679b3f3ad516dc5d7b7c718eb746f33ae068e44524b01260e3922037f9b27ef464f5681189195847a125c6a510b2ca1fc29b08bafd108606a9f0db80af77c653ab526e80d3cf98ceb57ae4d051366c0f64bd047f0e68fb20468abdecdf87858e87f204785e45c32bccf9e16e42a6fdd28094f51eb7af5e0c40f6f9c89177eb00d3315e47f12c67d7233a555778b16dae85db21d6fbd5d6be1ebc8e874134910b8d814814b9e104dc578af26283413c48dc804557529155d621ca977e27ac42e104b654a1d99fe22bba20bb136f10d52581d7c5e1706fa104545bf2c5003989cff94b366dfae475719ed4090baa055feb2d1c4ba831f906431a7d4d39a1920baba128f189ad2781ea05a873badd43dbded9aa9c2dcc4246354626fa81967e620fae6a91b025aa6ff9e7ad79867f4f4d452d792e8c2b72864d3135bf2e98848dfd3c6c3833ecb13d51d67f44712273818aa46fd35feebaaa53c91199da96a8fa147ccedc2ba55c03a5ea42214e0d6221e76ee4ae3b4f5e4e9bf44fdfde14ce6ff1aecf2ff6539a7fd4a21174e23f31b1f5683150d98ef3fd4a24bfcb75791a5161ac626f4f30325848eb4cfe09a26449123f17eacbeace261314d9c1d4543a79978b406f0cddaceb682c62fd9c28f24e54ae96f3e3d53c35ddc9eb3a4e579f4a127ae3a3232a4f63c0c44974855fe9e0d8064a48210269272948cabd030b47b5a17593aacfb119ebb0d146780d12bacc5c10716eb19752aff00020abd38de36eea65d1cbd10f5216e7ff8cfbe7b0bfc2f860e6bbc9fcb862c7c814816f037e4fdd714019814e07881478604bb404c54b751233260827d990f04a9a04a109bebe19f4e4f2e964c3c8a01da8896586309547c4d0d2bcf4cbe0d17f5a4ac3dd66133a50fb23ce25614829dc27f140e03d6afca1e0a4cf3fdfc25bb4f37df71d0820df930506a05b9d7f0d1396c93658ffe00057a705d1e7d1c2d84dad5d045019b5a68b4ec755146f8758e202c4390bd996c9ff634f4289a73077c05da4c1fdb84b141b47e4cb829e23c9284144ba620214e0bceb1bab7dc229d45d29092fac7f47603bcdf5bfeaba65b504489d0426919aaed241b7532ee91b0cb5010551f15ef0bb2acfc1c06f620c0f916263ebfaee519f7d4c75e48ff5bf3d99a5ac2a910c2ea619e41f2e6f4b2cdddedaf5252adc43e9a4c8b10b35958be986a6c40548bc0a361c4ad34028af3dfda73ec41036096d7fda06c2873318ec0c291ed86dde7aeee1bdb12b261168988048bd8d58c9d211427cda3d7b9a5319860f735c2a1ace768b85b3aa1f52e261d54b3c5f6a518602a0b0767babdbeaa27f6aad7a7a7be34d58b00967de9d62c885075d1fe029caf62954f2d9f4e4744bed6779910bcd70a68f9334a407b5f7d0ec2f058a38755a83e286c501c91441cf8639bc0534046c5359dabb429cbba34d96a6f40512d0750e469b97fb1a0bdb5a197f139c898551493be93c39c158d3591f2c62add0efc88da0ff8368fe42195c499b0395f75f87832d030112f7adbf802e3103d6262454dfa0eb90178fdf57577cff02bdc227318c2ca5dab8eaf98920ace5a68fb786b7cca5f2f257605107d0c1ff448e47b3a261df5507f3de140dd151778f2ca4a4ec53956c9ba9fa8e44b329c5e537598cf6f137ec15535e857e6c8132b5610d028ae5fb766832ebe45edda6a15c4b02eafea449a99d956617b54721b506be39bde5d7cdf67835d18a766ec8a8f2bcc2742f97c4e6f8539aeecb2f3f15143630687cd6dac9b987e1954cd19dbcd3791e461112a6e29d47d7c8628f3eced4779de29f870d4835cf23da804d0a6015d3967596ebdf951dbb8ea7c85dac94ab7499f6793a6d21d115d12da7c1bc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>外挂标签</title>
      <link href="/article/662e6e0cef0f.html"/>
      <url>/article/662e6e0cef0f.html</url>
      
        <content type="html"><![CDATA[<h2 id="pipe"><a href="#pipe" class="headerlink" title="pipe"></a>pipe</h2><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pietitle Key elements in Product X&quot;Calcium&quot; : 42.96&quot;Potassium&quot; : 50.05&quot;Magnesium&quot; : 10.01&quot;Iron&quot; : 5  </pre></div><h2 id="tabs"><a href="#tabs" class="headerlink" title="tabs"></a>tabs</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab 名字为第一个 Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标没有 Tab 名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="button"><a href="#button" class="headerlink" title="button"></a>button</h2><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js .org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><a class="btn-beautify block" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa -hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa -hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify red larger" href="https:// butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><div class="btn-center" ><a class="btn-beautify outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly .js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org /"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger % } {% btn https://butterfly.js.org/" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a> </div><h2 id="inlineImg"><a href="#inlineImg" class="headerlink" title="inlineImg"></a>inlineImg</h2><p>你看我长得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>我觉得很漂亮<img class="inline-img" src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px"/></p><h2 id="label"><a href="#label" class="headerlink" title="label"></a>label</h2><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍卫之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><h2 id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h2><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>這是測試頁面</p></div></div></div><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>這是測試頁面</p></div></div></div><h2 id="flink"><a href="#flink" class="headerlink" title="flink"></a>flink</h2><div class="flink"><div class="flink-name">友情鏈接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="JerryC" />              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日畢">今日事,今日畢</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Hexo" />              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、簡單且強大的網誌框架">快速、簡單且強大的網誌框架</div>            </a>          </div></div><div class="flink-name">網站</div><div class="flink-desc">值得推薦的網站</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://www.youtube.com/" title="Youtube" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Youtube" />              </div>              <div class="flink-item-name">Youtube</div>               <div class="flink-item-desc" title="視頻網站">視頻網站</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://www.weibo.com/" title="Weibo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Weibo" />              </div>              <div class="flink-item-name">Weibo</div>               <div class="flink-item-desc" title="中國最大社交分享平台">中國最大社交分享平台</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://twitter.com/" title="Twitter" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Twitter" />              </div>              <div class="flink-item-name">Twitter</div>               <div class="flink-item-desc" title="社交分享平台">社交分享平台</div>            </a>          </div></div></div><h2 id="abcjs-乐谱"><a href="#abcjs-乐谱" class="headerlink" title="abcjs 乐谱"></a>abcjs 乐谱</h2><div class="abc-music-sheet">X:1T:alternate headsM:CL:1/8U:n=!style=normal!K:C treble style=rhythm&quot;Am&quot; BBBB B2 B&gt;B | &quot;Dm&quot; B2 B/B/B &quot;C&quot; B4 |&quot;Am&quot; B2 nGnB B2 nGnA | &quot;Dm&quot; nDB/B/ nDB/B/ &quot;C&quot; nCB/B/ nCB/B/ |B8| B0 B0 B0 B0 |]%%text This translates to:[M:C][K:style=normal][A,EAce][A,EAce][A,EAce][A,EAce] [A,EAce]2 [A,EAce]&gt;[A,EAce] |[DAdf]2 [DAdf]/[DAdf]/[DAdf] [CEGce]4 |[A,EAce]2 GA [A,EAce] GA |D[DAdf]/[DAdf]/ D[DAdf]/[DAdf]/ C [CEGce]/[CEGce]/ C[CEGce]/[CEGce]/ |[CEGce]8 | [CEGce]2 [CEGce]2 [CEGce]2 [CEGce]2 |]GAB2 !style=harmonic![gb]4|GAB2 [K: style=harmonic]gbgb|[K: style=x]C/A,/ C/C/E C/zz2|w:Rock-y did-nt like that</div><h2 id="引用标注"><a href="#引用标注" class="headerlink" title="引用标注"></a>引用标注</h2><blockquote><p>simple</p></blockquote><div class="note simple"><p>默認 提示塊標籤</p></div><div class="note default simple"><p>default 提示塊標籤</p></div><div class="note primary simple"><p>primary 提示塊標籤</p></div><div class="note success simple"><p>success 提示塊標籤</p></div><div class="note info simple"><p>info 提示塊標籤</p></div><div class="note warning simple"><p>warning 提示塊標籤</p></div><div class="note danger simple"><p>danger 提示塊標籤</p></div><blockquote><p>modern</p></blockquote><div class="note modern"><p>默認 提示塊標籤</p></div><div class="note default modern"><p>default 提示塊標籤</p></div><div class="note primary modern"><p>primary 提示塊標籤</p></div><div class="note success modern"><p>success 提示塊標籤</p></div><div class="note info modern"><p>info 提示塊標籤</p></div><div class="note warning modern"><p>warning 提示塊標籤</p></div><div class="note danger modern"><p>danger 提示塊標籤</p></div><h2 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h2><div class="note warning flat"><p>2.2.0以上提供</p><p>请注意，tag-hide内的外挂标签content内都不建议由h1~h6等标题。因为Toc会把隐藏内容标题也显示出来，而且当滚动屏幕时，如果隐藏内容没有显示出来，会导致Toc的滚动出现异常</p></div><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个外挂标签。</p><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">Inline</button></li><li class="tab"><button type="button" data-href="#-2">Block</button></li><li class="tab"><button type="button" data-href="#-3">Toggle</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><code>inline</code> 在文本里面添加按钮隐藏内容，只限文字<br>(content不能包含英文逗号，可用<code>&amp;sbquo</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content, display, bg, color %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字(可选)</li><li>bg: 按钮的背景颜色(可选)</li><li>color: 按钮文字的颜色(可选)</li></ul><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">外星人离开了地球会带走什么？ &#123;% hideInline UFO, 查看答案, #FFCC80, #fff %&#125;</span><br></pre></td></tr></table></figure><p>外星人离开了地球会带走什么？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color:  #FFCC80;color:  #fff"> 查看答案<br>  </button><span class="hide-content">UFO</span></span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><code>block</code> 独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等<br>(display 不能包含英文逗号，可用 <code>&amp;sbquo</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字(可选)</li><li>bg: 按钮的背景颜色(可选)</li><li>color: 按钮文字的颜色(可选)</li></ul><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看答案</span><br><span class="line">&#123;% hideBlock 查看答案 %&#125;</span><br><span class="line">傻子，怎么可能有答案</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><blockquote><p>2.3.0以上支持</p></blockquote><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开<br>(display 不能包含英文逗号，可用 <code>&amp;sbquo</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle Butterfly安裝方法 %&#125;</span><br><span class="line">在你的博客根目錄裏</span><br><span class="line"></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">如果想要安裝比較新的dev分支，可以</span><br><span class="line"></span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><details class="toggle" ><summary class="toggle-button" style="">Butterfly安裝方法</summary><div class="toggle-content"><p>在你的博客根目錄裏</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安裝比較新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Hello </category>
          
          <category> World </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
            <tag> world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
